{
  "hash": "9656b9a9dd38198f2190f0f0d4377de2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Simplifying Teaching with webR\"\nauthor: \"Brian Cervantes Alvarez\"\ndate: \"07-21-2024\"\nformat:\n  LUstyle-revealjs:\n    footer: \"ST 437 Data Visualization\"\n    logo: \"images/OSULogo.png\"\n    auto-stretch: false\n    scrollable: true\n    incremental: true\nexecute: \n  echo: true\n  warning: false\nwebr:\n  packages: ['ggplot2', 'dplyr'] # Install R packages on document open\n  show-startup-message: false    # Disable displaying status of webR initialization\nfilters:\n  - webr\n---\n\n\n## Learning Objectives\n\n- Examine traditional teaching methods in data visualization courses\n- Discuss their limitations and challenges\n- Explore how webR can simplify and enhance the learning experience\n- Make learning more interactive and engaging for students\n\n\n## Traditional Teaching Methods\n\n### Teaching Statistics with RStudio\n\n- Many statistics courses incorporate R for data analysis and visualization.\n- Typically, lectures cover statistical concepts, and practical workshops focus on R programming.\n- Including R programming examples in lectures can be challenging due to window switching and limited student engagement.\n\n## Traditional Teaching Methods: *Screenshots and Code*\n\n### Example Code in RStudio\n\n```r\n#| eval: false\n#| echo: true\n# Load necessary packages\nlibrary(ggplot2)\n# Create a simple plot\nggplot(mtcars, aes(x = mpg, y = hp)) + \n  geom_point()\n```\n\n### Code and Output\n\n- Code is usually shown as static screenshots or pre-written blocks.\n- Students struggle to follow along without hands-on practice.\n\n\n## Traditional Teaching Methods: *Live Coding*\n\n:::: {.columns}\n\n::: {.column width=60%}\n\n**Pros**\n\n- Shows the process of writing code\n- Teaches students how to debug code\n- Demonstrates good programming practices\n\n:::\n\n::: {.column width=40%}\n\n**Cons**\n\n- Switching between windows \n- More pressure as a demonstrator \n- Hard for students to run the code themselves\n\n:::\n\n::::\n\n\n## Introducing webR {data-background=\"#fd7038\" data-background-transition=\"zoom\"}\n\n### What is webR?\n\n- [webR](https://docs.r-wasm.org/webr/latest/) is a version of R that runs directly in a **web browser**.\n- It **eliminates** the need for [local installation or server setup]{style=\"text-decoration: underline;\"}.\n- It just works (even on your phone).\n\n\n## Using webR in Presentations {data-background=\"rgb(252, 149, 108)\"}\n\n### Demo Setup and Background\n\nThe purpose of this document is to explore how webR can be embedded in a Quarto document for teaching R.\n\n::: {.nonincremental}\n\n- WebR Website: <https://docs.r-wasm.org/webr/latest/>\n- WebR GitHub: <https://github.com/r-wasm/webr/>\n\n:::\n\n\n## webR Demo 1 {data-background=\"rgb(252, 149, 108)\"}\n\n### Linear Regression\n\nWe'll first start with the webR team's demo example, the statistician's way of saying, \"Hello world!\"â€”linear regression:\n\n\n```{webr}\nfit = lm(mpg ~ am, data=mtcars)\nsummary(fit)\n```\n\n\n### Retrieving Prior Objects\n\nEach webR cell appears to be connected to each other, allowing access to previous outcomes:\n\n\n```{webr}\ncoef(fit)\n```\n\n\n### Mixing Active and Non-Active R Code\n\nFor _if-else_ statements:\n\n```r\nif (...) {\n  # Statements for TRUE\n} else {\n  # Statements for FALSE\n}\n```\n\n::: {.nonincremental}\n\n- `...` denotes a condition (either `TRUE` or `FALSE`).\n- If `TRUE`, the statements inside `{}` run.\n- Otherwise, the statements inside the `else` block run.\n\n:::\n\n\nLet's classify temperature to print \"Hot!\" or \"Cold!\":\n\n\n```{webr}\ntemperature = 60\n\nif (temperature > 76) {\n  print(\"Hot!\")\n} else {\n  print(\"Cold!\")\n}\n```\n\n\n## webR Demo 2 {data-background=\"rgb(252, 149, 108)\"}\n\n### Summarize Data\n\nGlancing at data frames:\n\n\n```{webr}\nsummary(mtcars)\n```\n\n\n### Base Graphics\n\nGraphing with base R:\n\n\n```{webr}\nplot(pressure)\n```\n\n\nMore advanced base R graphing:\n\n\n```{webr}\nx1 = seq(0, 1, length = 20)\ny1 = rep(0, 20)\nx2 = rep(0, 20)\ny2 = seq(0.75, 0, length = 20)\n\nplot(0, type = \"n\",\n     axes = FALSE, ylab = \"\", xlab = \"\", \n     xlim = c(0, 1), ylim = c(0, 0.75), asp = 1,\n     main = \"Straight Lines as a Curve\")\n\nsegments(x1, y1, x2, y2)\nbox(col = \"grey\")\n```\n\n\n### `ggplot2` Example\n\nCreate a box plot with `ggplot2`:\n\n\n```{webr}\n# Plot\ng <- ggplot(mpg, aes(x = class, y = cty))\ng + geom_boxplot(varwidth=T, fill=\"plum\") + \n    labs(title=\"Box plot\", \n         subtitle=\"City Mileage grouped by Class of vehicle\",\n         caption=\"Source: mpg\",\n         x=\"Class of Vehicle\",\n         y=\"City Mileage\") +\n    theme_classic()\n```\n\n\n\n\n## Creating Interactive Teaching Materials with webR {data-background=\"rgb(252, 149, 108)\"}\n\n### Benefits of webR\n\n- Students can run code directly in the browser, fostering interactive learning.\n- Easy troubleshooting and no local setup required.\n- No need for software installation, making it accessible to all students.\n- Ideal for live coding sessions, demonstrations, and exploratory data analysis.\n\n\n## What Can You Do with webR? {data-background=\"rgb(252, 149, 108)\"}\n\n### Use Cases\n\n* Download R package datasets to .csv, .xlsx, etc., on-the-fly: [tidyverse.r-universe.dev/ggplot2](https://tidyverse.r-universe.dev/ggplot2)\n* Shiny apps without a server: [github.com/georgestagg/shiny-standalone-webr-demo](https://github.com/georgestagg/shiny-standalone-webr-demo)\n* Create interactive, engaging teaching materials (that work even in lecture environments).\n\n\n\n\n\n## Revolutionizing Teaching with webR {data-background=\"rgb(252, 149, 108)\"}\n\n### Why webR is a Game Changer\n\n- webR transforms traditional lectures into dynamic and interactive sessions.\n- It helps maintain student interest and improves comprehension through hands-on practice.\n- Simplifies the teaching process, allowing instructors to focus on content delivery rather than technical setup.\n\n\n## Summary {data-background=\"rgb(252, 149, 108)\"}\n\nIn conclusion, webR offers a powerful tool for teaching statistics and data visualization. By enabling interactive coding directly within presentations, it enhances student engagement and simplifies the instructional process.\n\n\n## References {data-background=\"rgb(252, 149, 108)\"}\n\n### Useful Resources\n\n- [webR Documentation](https://docs.r-wasm.org/webr/latest/)\n- [Teaching Statistics with webR](https://nrennie.github.io/teaching-with-webR)\n- [webR GitHub Repository](https://github.com/georgestagg/shiny-standalone-webr-demo)\n\n",
    "supporting": [
      "WebR_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}