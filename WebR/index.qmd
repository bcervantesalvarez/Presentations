---
title: "Simplifying Teaching with webR"
author: "Brian Cervantes Alvarez"
date: "07-21-2024"
format:
  LUstyle-revealjs:
    footer: "ST 437 Data Visualization"
    logo: "images/OSULogo.png"
    auto-stretch: false
    scrollable: true
    incremental: true
execute: 
  echo: true
  warning: false
webr:
  packages: ['ggplot2', 'dplyr'] # Install R packages on document open
  show-startup-message: false    # Disable displaying status of webR initialization
filters:
  - webr
---

## Learning Objectives

- Examine traditional teaching methods in data visualization courses
- Discuss their limitations and challenges
- Explore how webR can simplify and enhance the learning experience
- Make learning more interactive and engaging for students


## Traditional Teaching Methods

### Teaching Statistics with RStudio

- Many statistics courses incorporate R for data analysis and visualization.
- Typically, lectures cover statistical concepts, and practical workshops focus on R programming.
- Including R programming examples in lectures can be challenging due to window switching and limited student engagement.

## Traditional Teaching Methods: *Screenshots and Code*

### Example Code in RStudio

```r
#| eval: false
#| echo: true
# Load necessary packages
library(ggplot2)
# Create a simple plot
ggplot(mtcars, aes(x = mpg, y = hp)) + 
  geom_point()
```

### Code and Output

- Code is usually shown as static screenshots or pre-written blocks.
- Students struggle to follow along without hands-on practice.


## Traditional Teaching Methods: *Live Coding*

:::: {.columns}

::: {.column width=60%}

**Pros**

- Shows the process of writing code
- Teaches students how to debug code
- Demonstrates good programming practices

:::

::: {.column width=40%}

**Cons**

- Switching between windows 
- More pressure as a demonstrator 
- Hard for students to run the code themselves

:::

::::


## Introducing webR {data-background="#fd7038" data-background-transition="zoom"}

### What is webR?

- [webR](https://docs.r-wasm.org/webr/latest/) is a version of R that runs directly in a **web browser**.
- It **eliminates** the need for [local installation or server setup]{style="text-decoration: underline;"}.
- It just works (even on your phone).


## Using webR in Presentations {data-background="rgb(252, 149, 108)"}

### Demo Setup and Background

The purpose of this document is to explore how webR can be embedded in a Quarto document for teaching R.

::: {.nonincremental}

- WebR Website: <https://docs.r-wasm.org/webr/latest/>
- WebR GitHub: <https://github.com/r-wasm/webr/>

:::


## webR Demo 1 {data-background="rgb(252, 149, 108)"}

### Linear Regression

We'll first start with the webR team's demo example, the statistician's way of saying, "Hello world!"â€”linear regression:

```{webr}
fit = lm(mpg ~ am, data=mtcars)
summary(fit)
```

### Retrieving Prior Objects

Each webR cell appears to be connected to each other, allowing access to previous outcomes:

```{webr}
coef(fit)
```

### Mixing Active and Non-Active R Code

For _if-else_ statements:

```r
if (...) {
  # Statements for TRUE
} else {
  # Statements for FALSE
}
```

::: {.nonincremental}

- `...` denotes a condition (either `TRUE` or `FALSE`).
- If `TRUE`, the statements inside `{}` run.
- Otherwise, the statements inside the `else` block run.

:::


Let's classify temperature to print "Hot!" or "Cold!":

```{webr}
temperature = 60

if (temperature > 76) {
  print("Hot!")
} else {
  print("Cold!")
}
```

## webR Demo 2 {data-background="rgb(252, 149, 108)"}

### Summarize Data

Glancing at data frames:

```{webr}
summary(mtcars)
```

### Base Graphics

Graphing with base R:

```{webr}
plot(pressure)
```

More advanced base R graphing:

```{webr}
x1 = seq(0, 1, length = 20)
y1 = rep(0, 20)
x2 = rep(0, 20)
y2 = seq(0.75, 0, length = 20)

plot(0, type = "n",
     axes = FALSE, ylab = "", xlab = "", 
     xlim = c(0, 1), ylim = c(0, 0.75), asp = 1,
     main = "Straight Lines as a Curve")

segments(x1, y1, x2, y2)
box(col = "grey")
```

### `ggplot2` Example

Create a box plot with `ggplot2`:

```{webr}
# Plot
g <- ggplot(mpg, aes(x = class, y = cty))
g + geom_boxplot(varwidth=T, fill="plum") + 
    labs(title="Box plot", 
         subtitle="City Mileage grouped by Class of vehicle",
         caption="Source: mpg",
         x="Class of Vehicle",
         y="City Mileage") +
    theme_classic()
```



## Creating Interactive Teaching Materials with webR {data-background="rgb(252, 149, 108)"}

### Benefits of webR

- Students can run code directly in the browser, fostering interactive learning.
- Easy troubleshooting and no local setup required.
- No need for software installation, making it accessible to all students.
- Ideal for live coding sessions, demonstrations, and exploratory data analysis.


## What Can You Do with webR? {data-background="rgb(252, 149, 108)"}

### Use Cases

* Download R package datasets to .csv, .xlsx, etc., on-the-fly: [tidyverse.r-universe.dev/ggplot2](https://tidyverse.r-universe.dev/ggplot2)
* Shiny apps without a server: [github.com/georgestagg/shiny-standalone-webr-demo](https://github.com/georgestagg/shiny-standalone-webr-demo)
* Create interactive, engaging teaching materials (that work even in lecture environments).





## Revolutionizing Teaching with webR {data-background="rgb(252, 149, 108)"}

### Why webR is a Game Changer

- webR transforms traditional lectures into dynamic and interactive sessions.
- It helps maintain student interest and improves comprehension through hands-on practice.
- Simplifies the teaching process, allowing instructors to focus on content delivery rather than technical setup.


## Summary {data-background="rgb(252, 149, 108)"}

In conclusion, webR offers a powerful tool for teaching statistics and data visualization. By enabling interactive coding directly within presentations, it enhances student engagement and simplifies the instructional process.


## References {data-background="rgb(252, 149, 108)"}

### Useful Resources

- [webR Documentation](https://docs.r-wasm.org/webr/latest/)
- [Teaching Statistics with webR](https://nrennie.github.io/teaching-with-webR)
- [webR GitHub Repository](https://github.com/georgestagg/shiny-standalone-webr-demo)


